$ #include <cmath>
$ #include "omp.h"
$
$ void computeLegendre(int n, int npts, const double* x, double* val)
$ {
$     #pragma omp parallel for schedule(static)
$     for (int i=0; i<npts; i++) {
$         val[i] = std::legendre(n, x[i]);
$     }
$ }
$
function val = mylegendre(n, x)
    npts = numel(x);
    val = zeros(npts, 1);
    # computeLegendre(int n, int npts, double[] x, inout double[] val);
    val = reshape(val, size(x));
end
